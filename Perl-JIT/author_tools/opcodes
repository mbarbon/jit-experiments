# AST op definitions, one per line. "C flags" is the actual C flags written to
# the output file for runtime properties. "options" contols generation behaviour.
# Use | chars to separate flags and options.
# The "PJ_ASTf_" prefix of flags is added automatically, so use "KIDS_OPTIONAL"
# instead of the longer "PJ_ASTf_KIDS_OPTIONAL".

# Options:
# - emit => actually emit as code to include for main OP switch in src/pj_optree.c FIXME this does nothing yet
# - nonroot => don't build AST for this OP if it's at the root of a potential AST

# Alas, the order is important. Keep unops/binops/listops together, please.

# AST op, AST op class, op name, Perl OP, C flags, options

# unops
pj_unop_negate,		pj_opc_unop,	unary -,	OP_NEGATE, 	0,	emit
pj_unop_sin,		pj_opc_unop,	sin,		OP_SIN,		KIDS_OPTIONAL,	emit
pj_unop_cos,		pj_opc_unop,	cos,		OP_COS,		KIDS_OPTIONAL,	emit
pj_unop_abs,		pj_opc_unop,	abs,		OP_ABS,		KIDS_OPTIONAL,	emit
pj_unop_sqrt,		pj_opc_unop,	sqrt,		OP_SQRT,	KIDS_OPTIONAL,	emit
pj_unop_log,		pj_opc_unop,	log,		OP_LOG,		KIDS_OPTIONAL,	emit
pj_unop_exp,		pj_opc_unop,	exp,		OP_EXP,		KIDS_OPTIONAL,	emit
pj_unop_perl_int,	pj_opc_unop,	int,		OP_INT,		KIDS_OPTIONAL,	emit
pj_unop_bitwise_not,	pj_opc_unop,	~,		OP_COMPLEMENT,	0,	emit
pj_unop_bool_not,	pj_opc_unop,	!,		OP_NOT,		0,	emit
pj_unop_defined,	pj_opc_unop,	defined,	OP_DEFINED,	KIDS_OPTIONAL,	emit
pj_unop_rand,		pj_opc_unop,	rand,		OP_RAND,	KIDS_OPTIONAL,	emit
pj_unop_srand,		pj_opc_unop,	srand,		OP_SRAND,	KIDS_OPTIONAL,	emit
pj_unop_hex,		pj_opc_unop,	hex,		OP_HEX,		KIDS_OPTIONAL,	emit
pj_unop_oct,		pj_opc_unop,	oct,		OP_OCT,		KIDS_OPTIONAL,	emit
pj_unop_length,		pj_opc_unop,	length,		OP_LENGTH,	KIDS_OPTIONAL,	emit
pj_unop_ord,		pj_opc_unop,	ord,		OP_ORD,		KIDS_OPTIONAL,	emit
pj_unop_chr,		pj_opc_unop,	chr,		OP_CHR,		KIDS_OPTIONAL,	emit
pj_unop_lc,		pj_opc_unop,	lc,		OP_LC,		KIDS_OPTIONAL,	emit
pj_unop_uc,		pj_opc_unop,	uc,		OP_UC,		KIDS_OPTIONAL,	emit
pj_unop_lcfirst,	pj_opc_unop,	lcfirst,	OP_LCFIRST,	KIDS_OPTIONAL,	emit
pj_unop_ucfirst,	pj_opc_unop,	ucfirst,	OP_UCFIRST,	KIDS_OPTIONAL,	emit
pj_unop_quotemeta,	pj_opc_unop,	quotemeta,	OP_QUOTEMETA,	KIDS_OPTIONAL,	emit
pj_unop_preinc,		pj_opc_unop,	++(),		OP_PREINC,	0,	emit
pj_unop_postinc,	pj_opc_unop,	()++,		OP_POSTINC,	0,	emit
pj_unop_predec,		pj_opc_unop,	--(),		OP_PREDEC,	0,	emit
pj_unop_postdec,	pj_opc_unop,	()--,		OP_POSTDEC,	0,	emit
pj_unop_undef,		pj_opc_unop,	undef(),	OP_UNDEF,	KIDS_OPTIONAL,	emit
pj_unop_sv_deref,	pj_opc_unop,	sv_deref,	OP_RV2SV,	0,	emit
pj_unop_sv_ref,		pj_opc_unop,	sv_ref,		OP_SREFGEN,	0,	emit

# binops
pj_binop_add,		pj_opc_binop,	+,		OP_ADD,		0,	emit
pj_binop_subtract,	pj_opc_binop,	-,		OP_SUBTRACT,	0,	emit
pj_binop_multiply,	pj_opc_binop,	*,		OP_MULTIPLY,	0,	emit
pj_binop_divide,	pj_opc_binop,	/,		OP_DIVIDE,	0,	emit
pj_binop_modulo,	pj_opc_binop,	%,		OP_MODULO,	0,	emit
pj_binop_atan2,		pj_opc_binop,	atan2,		OP_ATAN2,	0,	emit
pj_binop_pow,		pj_opc_binop,	pow,		OP_POW,		0,	emit
pj_binop_left_shift,	pj_opc_binop,	<<,		OP_LEFT_SHIFT,	0,	emit
pj_binop_right_shift,	pj_opc_binop,	>>,		OP_RIGHT_SHIFT,	0,	emit
pj_binop_bitwise_and,	pj_opc_binop,	&,		OP_BIT_AND,	0,	emit
pj_binop_bitwise_or,	pj_opc_binop,	|,		OP_BIT_OR,	0,	emit
pj_binop_bitwise_xor,	pj_opc_binop,	^,		OP_BIT_XOR,	0,	emit
pj_binop_num_eq,	pj_opc_binop,	==,		OP_EQ,		0,	emit
pj_binop_num_ne,	pj_opc_binop,	!=,		OP_NE,		0,	emit
pj_binop_num_lt,	pj_opc_binop,	<,		OP_LT,		0,	emit
pj_binop_num_le,	pj_opc_binop,	<=,		OP_LE,		0,	emit
pj_binop_num_gt,	pj_opc_binop,	>,		OP_GT,		0,	emit
pj_binop_num_ge,	pj_opc_binop,	>=,		OP_GE,		0,	emit
pj_binop_num_cmp,	pj_opc_binop,	<=>,		OP_NCMP,	0,	emit
pj_binop_str_eq,	pj_opc_binop,	eq,		OP_SEQ,		0,	emit
pj_binop_str_ne,	pj_opc_binop,	ne,		OP_SNE,		0,	emit
pj_binop_str_lt,	pj_opc_binop,	lt,		OP_SLT,		0,	emit
pj_binop_str_le,	pj_opc_binop,	le,		OP_SLE,		0,	emit
pj_binop_str_gt,	pj_opc_binop,	gt,		OP_SGT,		0,	emit
pj_binop_str_ge,	pj_opc_binop,	ge,		OP_SGE,		0,	emit
pj_binop_str_cmp,	pj_opc_binop,	cmp,		OP_SCMP,	0,	emit
pj_binop_bool_and,	pj_opc_binop,	&&,		OP_AND,		KIDS_CONDITIONAL,	emit|nonroot
pj_binop_bool_or,	pj_opc_binop,	||,		OP_OR,		KIDS_CONDITIONAL,	emit|nonroot
pj_binop_definedor,	pj_opc_binop,	//,		OP_DOR,		KIDS_CONDITIONAL,	emit|nonroot

# listops
pj_listop_ternary,	pj_opc_listop,	?:,		OP_COND_EXPR,	KIDS_CONDITIONAL,	emit
pj_listop_substr,	pj_opc_listop,	substr,		OP_SUBSTR,	0,	emit
