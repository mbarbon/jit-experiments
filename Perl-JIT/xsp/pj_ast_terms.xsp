%module{Perl::JIT};

#include "pj_ast_terms.h"

/* map op to B::*OP class name */
#include "opclass.h"

%name{Perl::JIT::AST::Term}
class PerlJIT::AST::Term {
  pj_term_type type %get %set;
  OP *perl_op %get %set;

  void dump();
};

%name{Perl::JIT::AST::Op}
class PerlJIT::AST::Op : public %name{Perl::JIT::AST::Term} PerlJIT::AST::Term
{
  pj_op_type optype %get %set;
  pj_op_class op_class() const;
  std::vector<PerlJIT::AST::Term *> kids %get;
};

%name{Perl::JIT::AST::Unop}
class PerlJIT::AST::Unop : public %name{Perl::JIT::AST::Op} PerlJIT::AST::Op
{
  PerlJIT::AST::Term *get_kid() %code{% RETVAL = THIS->kids[0]; %};
  void set_kid(PerlJIT::AST::Term *k) %code{% THIS->kids[0] = k; %};
};

%name{Perl::JIT::AST::Binop}
class PerlJIT::AST::Binop : public %name{Perl::JIT::AST::Op} PerlJIT::AST::Op
{
  PerlJIT::AST::Term *get_left_kid() %code{% RETVAL = THIS->kids[0]; %};
  void set_left_kid(PerlJIT::AST::Term *k) %code{% THIS->kids[0] = k; %};

  PerlJIT::AST::Term *get_right_kid() %code{% RETVAL = THIS->kids[1]; %};
  void set_right_kid(PerlJIT::AST::Term *k) %code{% THIS->kids[1] = k; %};
};

%name{Perl::JIT::AST::Listop}
class PerlJIT::AST::Listop : public %name{Perl::JIT::AST::Op} PerlJIT::AST::Op
{};

%name{Perl::JIT::AST::Constant}
class PerlJIT::AST::Constant : public %name{Perl::JIT::AST::Term} PerlJIT::AST::Term
{
  pj_basic_type const_type %get %set;
  double dbl_value %get %set;
  int int_value %get %set;
  unsigned int uint_value %get %set;
};

%name{Perl::JIT::AST::Variable}
class PerlJIT::AST::Variable : public %name{Perl::JIT::AST::Term} PerlJIT::AST::Term
{
  pj_basic_type var_type %get %set;
  int ivar %get %set;
};

%name{Perl::JIT::AST::Optree}
class PerlJIT::AST::Optree : public %name{Perl::JIT::AST::Term} PerlJIT::AST::Term
{};
